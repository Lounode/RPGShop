plugins {
    id 'java'
}

group = project.maven_group
version = project.plugin_version

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven{
        name = "citizens-repo"
        url = "https://maven.citizensnpcs.co/repo"
    }
    //Github Project
    maven { url "https://jitpack.io" }
    maven{
        name = "Player Points"
        url = "https://repo.rosewooddev.io/repository/public/"
    }
    //Citizens
    maven { url 'https://maven.enginehub.org/repo/' }
    maven { url 'https://repo.dmulloy2.net/repository/public/' }
    maven { url 'https://repo.alessiodp.com/releases/' }
}
task printVersion {
    doLast {
        def versionFile = new File(System.getenv("GITHUB_ENV"))
        versionFile.append("VERSION=${project.version}\n")
    }
}
dependencies {
    compileOnly "org.spigotmc:spigot-api:1.12.2-R0.1-SNAPSHOT"
    //compileOnly fileTree("Module-NMS-V1_12_R1/lib")
    compileOnly fileTree("libs")
    compileOnly('net.byteflux:libby-bukkit:1.1.5')
    compileOnly "net.citizensnpcs:citizens-main:2.0.35-SNAPSHOT"
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'
    compileOnly 'com.github.PlaceholderAPI:PlaceholderAPI:2.10.9'
    compileOnly 'org.black_ixx:playerpoints:3.2.7'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [
            version: version
    ]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
